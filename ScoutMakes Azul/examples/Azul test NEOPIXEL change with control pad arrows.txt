"""
This test will initialize the BLE module and accept commands from the Bluetooth app controller arrows and manipulate 
the onboard NEOPIXEL colors. 

To use:
- Open the BLE app
- Connect to the CIRCUITPYTHON board
- Select the controller
- Selcect control 
- Press the arrows to see the NEOPIXEL change color according to the following commands:
    RIGHT = RED
    LEFT = BLUE
    UP = GREEN
    DOWN = WHITE
"""

from adafruit_ble import BLERadio
from adafruit_ble.advertising.standard import ProvideServicesAdvertisement
from adafruit_ble.services.nordic import UARTService
from adafruit_bluefruit_connect.packet import Packet
# Only the packet classes that are imported will be known to Packet.
from adafruit_bluefruit_connect.button_packet import ButtonPacket

import time
import board
import pulseio

import neopixel

pixel_pin = board.NEOPIXEL
num_pixels = 1

pixels = neopixel.NeoPixel(pixel_pin, num_pixels, brightness=0.3, auto_write=False)

RED = (255, 0, 0)
YELLOW = (255, 150, 0)
GREEN = (0, 255, 0)
CYAN = (0, 255, 255)
BLUE = (0, 0, 255)
PURPLE = (180, 0, 255)
WHITE = (255,255,255)

ble = BLERadio()
uart_service = UARTService()
advertisement = ProvideServicesAdvertisement(uart_service)

while True:
    ble.start_advertising(advertisement)
    while not ble.connected:
        pass

    # Now we're connected

    while ble.connected:
        if uart_service.in_waiting:
            # Packet is arriving.
            packet = Packet.from_stream(uart_service)
            if isinstance(packet, ButtonPacket) and packet.pressed:
                if packet.button == ButtonPacket.RIGHT:  # RIGHT button pressed
						pixels.fill(RED)
						pixels.show()
						# Increase or decrease to change the speed of the solid color change.
						time.sleep(1)
                elif packet.button == ButtonPacket.LEFT:  # LEFT button pressed
						pixels.fill(BLUE)
						pixels.show()
						time.sleep(1)
                elif packet.button == ButtonPacket.UP:  # UP button pressed
						pixels.fill(GREEN)
						pixels.show()
						time.sleep(1)
                elif packet.button == ButtonPacket.DOWN:  # DOWN button pressed
						pixels.fill(WHITE)
						pixels.show()
						time.sleep(1)